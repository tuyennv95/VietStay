{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tuyennguyen/KLTN/CLIEN/src/Components/RangeDateBlock/RangeDateBlock.js\",\n    _s = $RefreshSig$();\n\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport React from 'react';\nimport isInclusivelyAfterDay from 'react-dates/src/utils/isInclusivelyAfterDay';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst reactDates = require('react-dates/initialize');\n\nimport 'react-dates/lib/css/_datepicker.css';\nimport './style.css';\nimport { START_DATE, END_DATE } from 'react-dates/src/constants';\nimport moment from 'moment';\n\nfunction RangeDate(props) {\n  _s();\n\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setEndDate] = React.useState(null);\n  const [focusedInput, setFocusedInput] = React.useState(null);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [kidsCount, setKidsCount] = React.useState(1);\n  const [focusedInputLeftCol, setFocusedInputLeftCol] = React.useState(START_DATE); //   redirectToTrips: false,\n  //   focusedInputLeftCol: START_DATE,\n  //   bookedDates: []\n  //   }\n\n  function onFocusChange() {\n    setFocusedInputLeftCol(focusedInputLeftCol === START_DATE ? END_DATE : START_DATE);\n  }\n\n  function onDatesChange({\n    startDate,\n    endDate\n  }) {\n    const daysViolatingMinNightsCanBeClicked = false;\n    let minimumNights = 1;\n    ;\n    let doesNotMeetMinNights = false;\n\n    if (daysViolatingMinNightsCanBeClicked && startDate && endDate) {\n      const dayDiff = endDate.diff(startDate.clone().startOf('day').hour(12), 'days');\n      doesNotMeetMinNights = dayDiff < minimumNights && dayDiff >= 0;\n    }\n\n    setStartDate(startDate);\n    setEndDate(doesNotMeetMinNights ? null : endDate);\n    props.sendData({\n      startDate,\n      endDate\n    });\n  } // console.log(startDate, endDate);\n\n\n  const a = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DayPickerRangeController, {\n      startDate: startDate,\n      endDate: endDate //   onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })}\n      ,\n      onDatesChange: onDatesChange,\n      focusedInput: focusedInputLeftCol,\n      onFocusChange: onFocusChange,\n      numberOfMonths: 2 // keepOpenOnDateSelect={true}\n      ,\n      isOutsideRange: day => !isInclusivelyAfterDay(day, moment()) // showInput={true}\n      ,\n      hideKeyboardShortcutsPanel: true // DayBlocked={dayBlocked}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RangeDate, \"+2X5Sc3gMZ/tUELj9ERTiEenSzY=\");\n\n_c = RangeDate;\nexport default RangeDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"RangeDate\");","map":{"version":3,"sources":["/home/tuyennguyen/KLTN/CLIEN/src/Components/RangeDateBlock/RangeDateBlock.js"],"names":["DateRangePicker","SingleDatePicker","DayPickerRangeController","React","isInclusivelyAfterDay","reactDates","require","START_DATE","END_DATE","moment","RangeDate","props","startDate","setStartDate","useState","endDate","setEndDate","focusedInput","setFocusedInput","dropdownOpen","setDropdownOpen","kidsCount","setKidsCount","focusedInputLeftCol","setFocusedInputLeftCol","onFocusChange","onDatesChange","daysViolatingMinNightsCanBeClicked","minimumNights","doesNotMeetMinNights","dayDiff","diff","clone","startOf","hour","sendData","a","Date","day"],"mappings":"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","sourcesContent":["import 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nimport React from 'react';\nimport isInclusivelyAfterDay from 'react-dates/src/utils/isInclusivelyAfterDay';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nconst reactDates = require('react-dates/initialize');\nimport 'react-dates/lib/css/_datepicker.css';\nimport './style.css';\nimport { START_DATE, END_DATE } from 'react-dates/src/constants';\nimport moment from 'moment';\n\n\nfunction RangeDate(props) {\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [focusedInput, setFocusedInput] = React.useState(null);\n    const [dropdownOpen, setDropdownOpen] = React.useState(false);\n    const [kidsCount, setKidsCount] = React.useState(1);\n    const [focusedInputLeftCol, setFocusedInputLeftCol] = React.useState(START_DATE);\n\n    //   redirectToTrips: false,\n    //   focusedInputLeftCol: START_DATE,\n    //   bookedDates: []\n\n    //   }\n\n\n    function onFocusChange() {\n        setFocusedInputLeftCol(focusedInputLeftCol === START_DATE ? END_DATE : START_DATE);\n    }\n    function onDatesChange({ startDate, endDate }) {\n        const daysViolatingMinNightsCanBeClicked = false;\n        let minimumNights = 1;;\n        let doesNotMeetMinNights = false;\n        if (daysViolatingMinNightsCanBeClicked && startDate && endDate) {\n            const dayDiff = endDate.diff(startDate.clone().startOf('day').hour(12), 'days');\n            doesNotMeetMinNights = dayDiff < minimumNights && dayDiff >= 0;\n        }\n        setStartDate(startDate);\n        setEndDate(doesNotMeetMinNights ? null : endDate);\n        props.sendData({startDate, endDate});\n    }\n  \n    // console.log(startDate, endDate);\n    const a = new Date();\n    return (\n        <div className=\"App\">\n            <DayPickerRangeController\n                startDate={startDate}\n                endDate={endDate}\n                //   onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })}\n                onDatesChange={onDatesChange}\n\n                focusedInput={focusedInputLeftCol}\n                onFocusChange={onFocusChange}\n                numberOfMonths={2}\n                // keepOpenOnDateSelect={true}\n                isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}                // showInput={true}\n\n                hideKeyboardShortcutsPanel={true}\n\n                // DayBlocked={dayBlocked}\n            />\n        </div>\n    );\n}\n\n\n\nexport default RangeDate;\n"]},"metadata":{},"sourceType":"module"}